name: test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  LAUNCHABLE_ORGANIZATION: "launchableinc"
  LAUNCHABLE_WORKSPACE: "nose-launchable"
  EXPERIMENTAL_GITHUB_OIDC_TOKEN_AUTH: 1

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9, '3.10', '3.11']

    steps:
    - uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0
      with:
        fetch-depth: 0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@65d7f2d534ac1bc67fcd62888c5f4f3d2cb2b236 # v4.7.1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Set up JDK 1.8
      uses: actions/setup-java@0ab4596768b603586c0de567f2430c30f5b0d2b0 # v3.13.0
      with:
        java-version: 8
        distribution: 'adopt'
    - name: Install dependencies
      uses: nick-fields/retry@14672906e672a08bd6eeb15720e9ed3ce869cdd4 # v2.9.0
      with:
        max_attempts: 3
        timeout_minutes: 5
        retry_on: error
        command: |
          # see: https://github.com/pypa/pip/issues/11972
          python -m pip install wheel
          python -m pip install --upgrade pip
          pip install -r test-requirements.txt
          pip install -r requirements.txt
          pip install -e .
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: launchable verify
      run: launchable verify
    - name: launchable record build
      run: launchable record build --name ${GITHUB_RUN_ID}
    - name: launchable subset
      run: |
        pytest --collect-only -q | launchable subset --target 70% --observation --flavor python=${{ matrix.python-version }} pytest > launchable-subset.txt
        cat launchable-subset.txt
    - name: Test with pytest
      run: pytest --junit-xml=test-results/results.xml $(cat launchable-subset.txt)
    - name: launchable record build
      if: always()
      run: launchable record tests pytest test-results/results.xml


